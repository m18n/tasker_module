cmake_minimum_required(VERSION 3.10)
project(tasker_node)
set(CMAKE_THREAD_LIBS_INIT "-lpthread")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -pthread ")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
find_package(nlohmann_json REQUIRED)
find_package(CURL REQUIRED) 
include_directories(${CURL_INCLUDE_DIR})
if (NOT OPENSSL_FOUND)
  find_package(OpenSSL REQUIRED)
  find_package(ZLIB REQUIRED)
endif()
include_directories("include")
include_directories("connector_manager/include")
link_directories(lib)
add_subdirectory(Crow)
add_subdirectory(connector_manager)
add_executable(${PROJECT_NAME} main.cpp url.cpp controller.cpp tasker_node.cpp  tasker_manager.cpp event.cpp)
#add_library(${PROJECT_NAME} SHARED src/server.cpp src/json.c src/exeception.cpp)
#libtdclient.a libtdcore.a libtdapi.a libtdactor.a libtdnet.a libtdutils.a libtddb.a libtdsqlite.a
target_link_libraries(${PROJECT_NAME} -lm -pthread Crow connector_manager ${CURL_LIBRARIES} )
target_link_libraries(${PROJECT_NAME} ${OPENSSL_SSL_LIBRARY} ${OPENSSL_CRYPTO_LIBRARY} ${CMAKE_DL_LIBS} ${ZLIB_LIBRARIES}  nlohmann_json::nlohmann_json)